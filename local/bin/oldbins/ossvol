#!/bin/bash
#
# pbrisbin 2009, 2010
#
# ossvol is a simple script to manage oss volume levels and muting.
#
# original script by Daniel J Griffiths <ghost1227@archlinux.us> dzen
# OSD concept by breunig
#
###

message() {
  echo "usage: ossvol [option] [argument]"
  echo
  echo "  options:"
  echo "        -i, --increase   increase volume by [argument]"
  echo "        -d, --decrease   decrease volume by [argument]"
  echo "        -t, --toggle     toggle mute on and off"
  echo
  exit 1
}

# sets the volume level and stores the value in the var level for output
# via dzen or whatever
set_level() { level=$(ossmix -d 1 $channel -- $1 | cut -d ' ' -f 8); }

# toggles mute on/off
toggle() {
  if [[ -f "$volume" ]]; then
    set_level $(cat "$volume")
    rm "$volume"
  else
    ossmix -d 1 $channel | cut -d ' ' -f 10 | cut -d '.' -f 1 > "$volume"
    set_level 0
  fi
}

# adjust the current volume level, args must be +N or -N
adjust() {
  local arg="$1"

  # restore from mute
  if [[ -f "$volume" ]]; then
    # arg is now stored volume +/- argument
    arg="+$[ $(cat "$volume") $arg ]"
    rm "$volume"
  fi

  set_level $arg
}

# use variable $level to create an OSD for the current volume level
do_dzen() {
  # make a fifo from which dzen will read, this prevents mutliple dzens
  # from being spawned given repeated volume commands
  if [[ ! -e "$pipe" ]]; then
    mkfifo "$pipe"
    (dzen2 -tw $W -h $H -x $X -y $Y -fn "$font" -bg $BG -fg $FG < "$pipe"; rm -f "$pipe") &
  fi

  # send the text to the fifo (and eventually to dzen)
  (echo ${level/.*/} 25 | gdbar -fg $bar_FG -bg $bar_BG -h $bar_H -w $bar_W; sleep $s) >> "$pipe"
}

# dzen constants
pipe='/tmp/volpipe'
s=1

font='Verdana-8'

FG='#606060'
BG='#303030'

X=750
Y=515
H=50
W=400

# gdbar settings
bar_FG='#909090'
bar_BG='#606060'

bar_H=10
bar_W=300

# oss constants
volume="$HOME/.volume"
channel='vmix0-outvol'

# run it
case "$1" in
  -i|--increase) adjust "+$2" ;;
  -d|--decrease) adjust "-$2" ;;
  -t|--toggle)   toggle       ;;
  *)             message      ;;
esac

# do dzen if in X
if [[ -n "$DISPLAY" ]]; then
  do_dzen
else
  echo "$channel set to $level"
fi
