#!/bin/zsh

if [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]] || [[ "$1" == "" ]]; then
    echo "Usage: pmount [options] [device1] [device2] ... [devicen]"
    echo
    echo "Options:"
    echo "    -u = unmount"
    echo
    echo "Device:"
    echo "    A file with the name given as the device is looked for in these locations:"
    echo "      - /dev/disk/by-label/"
    echo "      - /dev/disk/by-uuid/"
    echo "      - /dev/"
    echo "    The first matching path found is passed to mount."
    echo
    echo "fstab:"
    echo "    If a device is foud in /etc/fstab, it will be (un)mounted with those options."
    echo "    If not, it will be (un)mounted to /media/DEVICE owned by the current user."
    echo
    echo "Michael Walker (Barrucadu) <mike@barrucadu.co.uk>"
    exit
fi

mountcmd=mount
device="$1"

arging=true
deving=true

uid=$EUID
gid=$EGID

# Parse arguments
while $arging; do
    case "$1" in
	"-u")
	    mountcmd=umount
	    shift
	    ;;
	*)
	    arging=false
	    ;;
    esac
done

# (Un)mount devices
while $deving; do
    if [[ "$1" == "" ]]; then
	deving=false
    else
	# Get device name
	if [[ -e /dev/disk/by-label/$1 ]]; then
	    device="/dev/disk/by-label/$1"
	elif [[ -e /dev/disk/by-uuid/$1 ]]; then
	    device="/dev/disk/by-uuid/$1"
	elif  [[ -e /dev/$1 ]]; then
	    device="/dev/$1"
	else
	    echo " => Device not found. Mount manually." 1>&2
	    exit 1
	fi

        opt=""
        opts=()
        if [[ $device == /dev/loop* ]]; then
            opt=loop
            opts=(-o loop)
        fi

	# Check for fstab entry
	if ! grep -q $device /etc/fstab; then
            # Use a temporary directory in /media for (un)mounting
	    if [[ $mountcmd == "mount" ]]; then
		if [[ -e "/media/$1" ]]; then
		    echo " => /media/$1 already exists. Mount manually." 1>&2
		    exit 2
		else
		    sudo mkdir /media/$1
		    if sudo mount $device /media/$1 -o uid=$uid,gid=$gid,$opt &>/dev/null; then
			echo " => Mounted at /media/$1"
		    else
			if sudo mount $device /media/$1 $opts &>/dev/null; then
			    echo " => Mounted at /media/$1. Could not set permissions."
			else
			    echo " => Could not mount."
			fi
		    fi
		fi
	    else
		if [[ -e "/media/$1" ]]; then
		    sudo umount /media/$1
		    sudo rmdir /media/$1
		else
		    echo " => /media/$1 not found. Unmount manually." 1>&2
		    exit 2
		fi
	    fi
	else
            # Use the directory specified in fstab
	    sudo $mountcmd $device
	fi
	shift
    fi
done
