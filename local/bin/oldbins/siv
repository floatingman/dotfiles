#!/bin/bash
#
# http://gist.github.com/612099# by Vain.
#
# Based on the "Shell image viewer" by Andreas SchÃ¶nfelder:
# https://bbs.archlinux.org/viewtopic.php?id=106089
#
# Seasoned to taste by pbrisbin
#
###

space=' '
colors="$(tput colors)"
size="$(($(tput cols) - 2))x$(($(tput lines) - 2))"

# Process arguments.
while getopts c:s: name; do
  case $name in
    c) colors="$OPTARG" ;;
    s) size="$OPTARG"   ;;
  esac
done

shift $((OPTIND - 1))

if [[ ! "$colors" =~ 8|256 ]]; then
  echo "'$colors' colors not supported." >&2
  exit 1
fi

# Remaining arguments are filenames.
while [[ -n "$1" ]]; do
  convert -compress none \
          -depth 8 \
          -filter box \
          -resize "$size" "$1" "ppm:-" | gawk '

  BEGIN {
  # Define colors and width of one pixel.
  blank   = "'"$space"'"
  reset   = "'"$(tput sgr0)"'"
  black   = "'"$(tput setab 0)"'"
  blue    = "'"$(tput setab 4)"'"
  green   = "'"$(tput setab 2)"'"
  cyan    = "'"$(tput setab 6)"'"
  red     = "'"$(tput setab 1)"'"
  magenta = "'"$(tput setab 5)"'"
  yellow  = "'"$(tput setab 3)"'"
  white   = "'"$(tput setab 7)"'"

  if ('"$colors"' == 8)
    divideby = 128
  else
    divideby = 51

    # Read first three non-comment and non-empty lines and get the
    # image width.
    while (i < 3)
    {
      getline
      if (!($0 ~ /^#/ || $0 == ""))
        i++
        if (i == 2)
          wid = $1
    }
  }

  # Read the rest of the image.
  {
    for (i = 1; i <= NF; i += 3)
    {
      r = int($i / divideby)
      g = int($(i + 1) / divideby)
      b = int($(i + 2) / divideby)

      if ('"$colors"' == 8)
      {
        if (r == 0 && g == 0 && b == 0) printf "%s%s%s", black,   blank, reset
        if (r == 0 && g == 0 && b == 1) printf "%s%s%s", blue,    blank, reset
        if (r == 0 && g == 1 && b == 0) printf "%s%s%s", green,   blank, reset
        if (r == 0 && g == 1 && b == 1) printf "%s%s%s", cyan,    blank, reset
        if (r == 1 && g == 0 && b == 0) printf "%s%s%s", red,     blank, reset
        if (r == 1 && g == 0 && b == 1) printf "%s%s%s", magenta, blank, reset
        if (r == 1 && g == 1 && b == 0) printf "%s%s%s", yellow,  blank, reset
        if (r == 1 && g == 1 && b == 1) printf "%s%s%s", white,   blank, reset
      }
      else
      {
        printf "\033[48;5;%dm%s%s", (16 + r * 36 + g * 6 + b), blank, reset
      }

      pixel++
      if (pixel == wid)
      {
        printf "\n"
        pixel = 0
      }
    }
  }'

  # One empty line between two images.
  shift
  [[ $# -gt 0 ]] && echo
done

