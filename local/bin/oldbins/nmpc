#!/bin/zsh
 
alias -g clean='sed "/^OK.*$/d"'
 
function help()
{
    if [[ "$1" != " " ]]; then
        echo "nmpc $NMPC_VERSION - a simple netcat-powered MPD client."
        echo
        echo "Usage: nmpc <command> [<arg1> ... <argn>]"
        echo
    fi
 
    case $2 in
        "" | "brief")
            if [[ "$NMPC_DEFHELP" = "" || $2 = "brief" ]]; then
                echo "To view specific help use the commands:"
                echo "nmpc --help all"
                echo "nmpc --help brief"
                echo "nmpc --help mpd"
                echo "nmpc --help nmpc"
                echo
                echo "You can edit the default help option by setting the environmental variable \$NMPC_DEFHELP."
            else
                help " " $NMPC_DEFHELP
            fi;;
 
        "mpd")
            echo "If nmpc cannot connect to your MPD server, you may need to edit the"
            echo "\$MPD_SERVER, \$MPD_PORT and \$MPD_PASSWORD variables in the source code."
            echo
            echo "MPD Commands:"
            echo " These are just sent on to MPD as-is."
            echo
            echo " Playback Commands"
            echo " next"
            echo " previous"
            echo " play"
            echo " pause"
            echo " stop"
            echo " setvol <int vol>"
            echo
            echo " Track Commands"
            echo " find <string type> <string what>"
            echo " list <metadata arg1> [<metadata arg2> <search term>]"
            echo
            echo " Playlist Commands"
            echo " clear"
            echo " shuffle"
            echo " add <string>"
            echo " delete <int song>"
            echo " save <string playlist name>"
            echo " rm <string playlist name>"
            echo
            echo " Database Commands"
            echo " update";;
 
        "nmpc")
            echo "NMPC Commands:"
            echo " These are more advanced commands handled by nmpc"
            echo " toggle - toggle the play/pause state"
            echo " crossfade - toggle the crossfade state"
            echo " repeat - toggle the repeat state"
            echo " random - toggle the random state"
            echo " raw - send \$2 as a command to MPD"
            echo " info - information about MPD."
            echo " playing <spread> - information about the current playlist. If spread is not blank, use more than two lines."
            echo " status <spread> - information about MPD and the current playlist."
            echo " playlist <playlist> - clear the playlist and load the specified playlist."
            echo " playlists - list the playlists."
            echo
            echo "You can change the value of the nmpc default command by editing the environmental variables"
            echo "\$NMPC_DEFCMD and \$NMPC_DEFARG1 to \$NMPC_DEFARG3. Note that the DEFARG variables will only be used"
            echo "if no command is given."
            echo
            echo "Error Codes:"
            echo " 1 = nmpc error (command not found, missing argument, etc)"
            echo " 2 = mpd error (missing playlist, missing track, etc)"
            echo
            echo "Versions:"
            echo " nmpc versions are named using the last date I made a significant change, so you can easily see"
            echo " how active current nmpc development is by looking at the last major change date."
            echo
            echo "Author:"
            echo " nmpc is written and maintained by Michael Walker (Barrucadu)"
            echo " Contact information and my public key can be found on my website, http://www.barrucadu.co.uk";;
 
        "all")
            help " " brief
            echo
            help " " mpd
            echo
            help " " nmpc ;;
    esac
}
 
function line()
{
    echo "$1" | grep -i "$2: " | sed "s/$2: //i"
}
 
function thisorthat()
{
    [ "$1" != "" ] && echo $1 || echo $2
}
 
function toggle()
{
    var=`echo $1 | sed "s/:.*$//"`
    oncmd=`thisorthat $2 "$var 1"`
    offcmd=`thisorthat $3 "$var 0"`
 
    mpdfunc status | grep -q "$1" && rawcmd "$oncmd" &>/dev/null || rawcmd "$offcmd" &>/dev/null
}
 
function nicetime()
{
    printf "%02d days %02d:%02d:%02d\n" $[$1 / 3600 / 24 ] $[$1 / 3600 % 24 ] $[$1 / 60 % 60] $[$1 % 60]
}
 
function rawcmd()
{
    password="" ; [ "$MPD_PASSWORD" != "" ] && password="password $MPD_PASSWORD\n"
    output=`echo "$password$1\nclose" | netcat $MPD_SERVER $MPD_PORT`
 
    echo $output
    echo $output | grep "^ACK " -q && return 2 || return 0
}
 
function mpdfunc()
{
    arglist=$1
 
    [ "$2" != "" ] && arglist="$arglist $2"
    [ "$3" != "" ] && [ "$4" = "" ] && arglist="$arglist \"$3\""
    [ "$3" != "" ] && [ "$4" != "" ] && arglist="$arglist $3 \"$4\""
 
    [ "$1" = "add" ] || [ "$1" = "save" ] || [ "$1" = "rm" ] && arglist="$1 \"$2\""
 
    output=`rawcmd "$arglist"`
    retval=$?
 
    echo $output | clean
    return $retval
}
 
function nmpcfunc()
{
    playlist_info=`rawcmd status | clean`
    song_info=`rawcmd currentsong | clean`
    mpd_info=`rawcmd stats | clean`
 
    case $1 in
        "toggle")
            toggle "state: play" pause play;;
 
        "crossfade")
            toggle "xfade: 0" "crossfade 5" "crossfade 0";;
 
        "repeat")
            toggle "repeat: 0";;
 
        "random")
            toggle "random: 0";;
 
        "raw")
            if [[ "$2" = "" ]]; then
                echo "Missing argument."
                return 1
            else
                output=`rawcmd "$2"`
                retval=$?
                echo $output
                return $retval
            fi;;
 
        "info")
            artists=`line $mpd_info artists`
            albums=`line $mpd_info albums`
            songs=`line $mpd_info songs`
 
            uptime=`nicetime \`line $mpd_info uptime\``
            playtime=`nicetime \`line $mpd_info playtime\``
 
            dbupdate=`date -d \`line $mpd_info db_updated\` -R`
            dbplaytime=`nicetime \`line $mpd_info db_playtime\``
 
            echo "$artists artists, $albums albums, $songs songs."
            echo
            echo "Uptime: $uptime"
            echo "Play time: $playtime"
            echo
            echo "Database Updated: $dbupdate"
            echo "Database Playtime: $dbplaytime";;
 
        "playing")
            state=`line $playlist_info state`
 
            if [[ "$state" = "stop" ]]; then
                echo "No track currently playing."
            else
                track=`line $song_info title`
                artist=`line $song_info artist`
                album=`line $song_info album`
 
                volume=`line $playlist_info volume`
                repeat="on"; [ "`line $playlist_info repeat`" = "0" ] && repeat="off"
                random="on"; [ "`line $playlist_info random`" = "0" ] && random="off"
                crossfade="on"; [ "`line $playlist_info xfade`" = "0" ] && crossfade="off"
                
                echo "$track, by $artist in $album [$state]"
                if [[ "$2" = "" ]]; then
                    echo "$volume% volume, repeat $repeat, random $random, crossfade $crossfade"
                else
                    echo
                    echo "Volume: $volume%"
                    echo "Repeat: $repeat"
                    echo "Random: $random"
                    echo "Crossfade: $crossfade"
                fi
            fi;;
 
        "status")
            nmpcfunc playing $2
            echo
            nmpcfunc info;;
 
        "playlist")
            if [[ "$2" = "" ]]; then
                echo "Missing argument."
                return 1
            else
                rawcmd clear | clean
                output=`rawcmd "load \"$2\""`
                retval=$?
                echo $output | clean
                return $retval
            fi;;
 
        "playlists")
            rawcmd lsinfo | grep "playlist: " | sed "s/playlist: //" | clean;;
        esac
}
 
function error()
{
    echo "Unknown command: $*"
}
 
MPD_SERVER=`thisorthat $MPDHOST "localhost"`
MPD_PORT=`thisorthat $MPDPORT "6600"`
MPD_PASSWORD=`thisorthat $MPDPASS ""`
 
NMPC_DEFCMD=`thisorthat $NMPC_DEFCMD "playing"`
NMPC_VERSION=9.8.21
 
if [[ "$1" = "" ]]; then
    2=$NMPC_DEFARG1
    3=$NMPC_DEFARG2
    4=$NMPC_DEFARG3
fi
 
1=`thisorthat $1 $NMPC_DEFCMD`
 
case $1 in
    "-h" | "--help")
        help $*;;
 
    "clear" | "next" | "previous" | "play" | "pause" | "stop" | "update" | "find" | "list" | "add" | "delete" | "save" | "rm" | "shuffle" | "setvol")
        mpdfunc $*
        return $?;;
 
    "toggle" | "crossfade" | "repeat" | "random" | "raw" | "info" | "playing" | "status" | "playlist" | "playlists")
        nmpcfunc $*
        return $?;;
 
    *)
        error $*
        return 1;;
esac

